# Copyright (C) 2021 Intel Corporation
# SPDX-License-Identifier: Apache-2.0

name: Input Validation
on:
  schedule:
    - cron: '0 0 * * SUN' # Runs at midnight every Sunday
  # Manually run this workflow on any specified branch.
  workflow_dispatch:

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  find-scripts:
    runs-on: ubuntu-20.04
    outputs: 
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - uses: actions/checkout@v2
      
      - id: set-matrix
        run: |
          matrix=$(python3 -c 'import os, json; print(json.dumps(os.listdir(".github/validation-ci")))')
          echo $matrix
          echo "::set-output name=matrix::$matrix"
          
  validation:
    runs-on: ubuntu-20.04
    needs: find-scripts
    strategy:
      matrix: 
        script: ${{fromJson(needs.find-scripts.outputs.matrix)}}

    steps:
      - name: Clone Repository (Latest on development)
        uses: actions/checkout@v2
        if: github.event.ref == ''
        with:
          ref: development
      - name: Clone Repository (Manual Selection)
        uses: actions/checkout@v2
        if: github.event.ref != ''
        with:
          ref: ${{ github.event.ref }}

      - name: Setup
        run: |
          echo yes | .github/workflows/install-requirements.sh
          git branch --show-current
          cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -DCMAKE_INSTALL_PREFIX=${{github.workspace}}/build -DCMAKE_C_COMPILER=gcc-9 -DCMAKE_CXX_COMPILER=g++-9
          cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}} -j
          cmake --install ${{github.workspace}}/build

          cmake -B ${{github.workspace}}/dataset_loader/tests/ -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -DCMAKE_INSTALL_PREFIX=${{github.workspace}}/dataset_loader/tests/build -DCMAKE_C_COMPILER=gcc-9 -DCMAKE_CXX_COMPILER=g++-9
          cmake --build ${{github.workspace}}/dataset_loader/tests/ --config ${{env.BUILD_TYPE}} -j
          cmake --install ${{github.workspace}}/dataset_loader/tests/

          CLEARTEXTLIB=${{github.workspace}}/build/lib/libhebench_example_backend.so
          echo "CLEARTEXTLIB=${{github.workspace}}/build/lib/libhebench_example_backend.so" >> $GITHUB_ENV

          # Create config.yml
          ${{github.workspace}}/build/bin/test_harness --config_file ${{github.workspace}}/build/config.yaml --backend_lib_path $CLEARTEXTLIB --dump

      - name: Run validation test
        working-directory: ${{github.workspace}}/build
        run: ../.github/validation-ci/${{ matrix.script }}
